---
AWSTemplateFormatVersion: '2010-09-09'
Description: GrassFormation test to create a complete Greengrass Stack
Transform: ['AWS::Serverless-2016-10-31', 'GrassFormation']

Parameters:
  GroupNameParameter:
    Type: String
    Description: "Name of the Greengrass Group"
  CSRParameter:
    Type: String
    Description: "The Certificate Signing Request for the Core certificate"

Resources:

  CoreCert:
    Type: AWS::IoT::Certificate
    Properties:
      CertificateSigningRequest: !Ref CSRParameter
      Status: ACTIVE

  CoreThing:
    Type: AWS::IoT::Thing
    Properties:
      ThingName: !Join ["_", [!Ref GroupNameParameter, "Core"]]

  CoreCertCoreThingAttachment:
    Type: AWS::IoT::ThingPrincipalAttachment
    Properties:
      Principal: !GetAtt CoreCert.Arn
      ThingName: !Ref CoreThing

  CorePolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyName: !Join ["_", [!Ref GroupNameParameter, "Policy"]]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: ["iot:Publish", "iot:Subscribe", "iot:Connect", "iot:Receive"]
          Resource: "*"
        - Effect: Allow
          Action: ["iot:GetThingShadow", "iot:UpdateThingShadow", "iot:DeleteThingShadow"]
          Resource: "*"
        - Effect: Allow
          Action: ["greengrass:*"]
          Resource: "*"

  CoreCertCorePolicyAttachment:
    Type: AWS::IoT::PolicyPrincipalAttachment
    Properties:
      Principal: !GetAtt CoreCert.Arn
      PolicyName: !Ref CorePolicy

  CoreDefinition:
    Type: NSP::GrassFormation::Core
    Properties:
      Name: !Join ["_", [!Ref GroupNameParameter, "Core"]]
      Cores:
      - CertificateArn: !GetAtt CoreCert.Arn
        Id: !Ref CoreThing
        SyncShadow: true
        ThingArn: !Join ["", ["arn:", !Ref "AWS::Partition", ":iot:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":thing/", !Ref CoreThing]]

  ResourceDefinition:
    Type: NSP::GrassFormation::Resource
    Properties:
      Name: !Join ["_", [!Ref GroupNameParameter, "Resources"]]
      Resources:
      - Id: !Join ["_", [!Ref GroupNameParameter, "Resource", "randomDevice"]]
        Name: "randomDevice"
        ResourceDataContainer:
          LocalDeviceResourceData:
            GroupOwnerSetting:
              AutoAddGroupOwner: true
            SourcePath: "/dev/random"
      - Id: !Join ["_", [!Ref GroupNameParameter, "Resource", "homeDirectory"]]
        Name: "homeDirectory"
        ResourceDataContainer:
          LocalVolumeResourceData:
            GroupOwnerSetting:
              AutoAddGroupOwner: true
            SourcePath: "/home/pi/"
            DestinationPath: "/home"

  LoggerDefinition:
    Type: NSP::GrassFormation::Logger
    Properties:
      Name: !Join ["_", [!Ref GroupNameParameter, "Loggers"]]
      Loggers:
      - Type: FileSystem
        Component: GreengrassSystem
        Level: INFO
        Space: 25600
        Id: !Join ["_", [!Ref GroupNameParameter, "Logger", "FileSystem", "GreengrassSystem"]]
      - Type: FileSystem
        Component: Lambda
        Level: INFO
        Space: 25600
        Id: !Join ["_", [!Ref GroupNameParameter, "Logger", "FileSystem", "Lambda"]]
      - Type: AWSCloudWatch
        Component: Lambda
        Level: INFO
        Id: !Join ["_", [!Ref GroupNameParameter, "Logger", "AWSCloudWatch", "Lambda"]]

  SubscriptionDefinition:
    Type: NSP::GrassFormation::Subscription
    Properties:
      Name: !Join ["_", [!Ref GroupNameParameter, "Subscriptions"]]
      Subscriptions:
        - Id: !Join ["_", [!Ref GroupNameParameter, "Subscription", "Shadow", "Lambda"]]
          Source: GGShadowService
          Target: !Ref GreengrassLambdaFunction.Alias
          Subject: !Join ["/", ["$aws/things", !Ref CoreThing, "shadow/update/delta"]]

  FunctionDefinition:
    Type: NSP::GrassFormation::Function
    Properties:
      Name: !Join ["_", [!Ref GroupNameParameter, "Functions"]]
      Functions:
        - FunctionArn: !Ref GreengrassLambdaFunction.Alias
          FunctionConfiguration:
            EncodingType: json
            Environment:
              AccessSysfs: false
              ResourceAccessPolicies:
                - ResourceId: !Join ["_", [!Ref GroupNameParameter, "Resource", "randomDevice"]]
                  Permission: ro
                - ResourceId: !Join ["_", [!Ref GroupNameParameter, "Resource", "homeDirectory"]]
                  Permission: ro
              Variables:
                AWS_DEFAULT_REGION: !Ref "AWS::Region"
                HELLO: WORLD
            Executable: lambda.handler
            MemorySize: 131072
            Pinned: true
            Timeout: 30
          Id: !Join ["_", [!Ref GroupNameParameter, "Function", "nsp-instore-streamer-dev-iot-runner"]]

  GreengrassGroup:
    Type: NSP::GrassFormation::Group
    Properties:
      GrassFormationResourceType: Group
      Name: !Ref GroupNameParameter
      GroupRoleArn: !GetAtt GreengrassGroupRole.Arn
      CoreDefinitionVersionArn: !GetAtt CoreDefinition.LatestVersionArn
      ResourceDefinitionVersionArn: !GetAtt ResourceDefinition.LatestVersionArn
      LoggerDefinitionVersionArn: !GetAtt LoggerDefinition.LatestVersionArn
      SubscriptionDefinitionVersionArn: !GetAtt SubscriptionDefinition.LatestVersionArn
      FunctionDefinitionVersionArn: !GetAtt FunctionDefinition.LatestVersionArn

  # Sample lambda function to be deployed on Greengrass Core

  GreengrassLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: python2.7
      InlineCode: !Sub |
        import json
        import time
        import struct
        import logging
        import os

        logging.info('Hello from Lambda function handler running on ${CoreDefinition.Name}')
        logging.info('Found in environment variable HELLO: {}'.format(os.environ.get('HELLO', 'None :(')))
        logging.info('AWS Default region: {}'.format(os.environ.get('AWS_DEFAULT_REGION', 'None')))

        def handler(event, context):
          logging.info('Received event: ')
          logging.info(json.dumps(event))

        while True:
          time.sleep(10)
          with open('/dev/random', 'rb') as rnd:
            rnd_int = struct.unpack('I', rnd.read(4))[0]
            logging.info('Long running test got random number: {}'.format(rnd_int))

      AutoPublishAlias: DEV
      MemorySize: 128
      Timeout: 3

  GreengrassGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: greengrass.amazonaws.com
      Path: '/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy
        - arn:aws:iam::aws:policy/AWSGreengrassFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Outputs:

  # AWS IoT resource outputs

  CoreCertId:
    Description: The ID of the Core Certificate
    Value: !Ref CoreCert

  CoreCertArn:
    Description: The ARN of the Core Certificate
    Value: !GetAtt CoreCert.Arn

  CoreThingName:
    Description: The name of the Core Thing
    Value: !Ref CoreThing

  CorePolicyName:
    Description: The name of the Core Policy
    Value: !Ref CorePolicy

  CorePolicyArn:
    Description: The ARN of the Core Policy
    Value: !GetAtt CorePolicy.Arn

  # GrassFormation CoreDefinition resource outputs

  CoreDefinitionName:
    Description: The name of the CoreDefinition
    Value: !GetAtt CoreDefinition.Name

  CoreDefinitionId:
    Description: The ID of the CoreDefinition
    Value: !GetAtt CoreDefinition.Id

  CoreDefinitionArn:
    Description: The ARN of the CoreDefinition
    Value: !GetAtt CoreDefinition.Arn

  CoreDefinitionLatestVersionId:
    Description: The ID of the latest version of CoreDefinition
    Value: !GetAtt CoreDefinition.LatestVersion

  CoreDefinitionLatestVersionArn:
    Description: The ARN of the latest version of CoreDefinition
    Value: !GetAtt CoreDefinition.LatestVersionArn

  # GrassFormation ResourceDefinition resource outputs

  ResourceDefinitionName:
    Description: The name of the ResourceDefinition
    Value: !GetAtt ResourceDefinition.Name

  ResourceDefinitionId:
    Description: The ID of the ResourceDefinition
    Value: !GetAtt ResourceDefinition.Id

  ResourceDefinitionArn:
    Description: The ARN of the ResourceDefinition
    Value: !GetAtt ResourceDefinition.Arn

  ResourceDefinitionLatestVersionId:
    Description: The ID of the latest version of ResourceDefinition
    Value: !GetAtt ResourceDefinition.LatestVersion

  ResourceDefinitionLatestVersionArn:
    Description: The ARN of the latest version of ResourceDefinition
    Value: !GetAtt ResourceDefinition.LatestVersionArn

  # GrassFormation LoggerDefinition resource outputs

  LoggerDefinitionName:
    Description: The name of the LoggerDefinition
    Value: !GetAtt LoggerDefinition.Name

  LoggerDefinitionId:
    Description: The ID of the LoggerDefinition
    Value: !GetAtt LoggerDefinition.Id

  LoggerDefinitionArn:
    Description: The ARN of the LoggerDefinition
    Value: !GetAtt LoggerDefinition.Arn

  LoggerDefinitionLatestVersionId:
    Description: The ID of the latest version of LoggerDefinition
    Value: !GetAtt LoggerDefinition.LatestVersion

  LoggerDefinitionLatestVersionArn:
    Description: The ARN of the latest version of LoggerDefinition
    Value: !GetAtt LoggerDefinition.LatestVersionArn

  # GrassFormation SubscriptionDefinition resource outputs

  SubscriptionDefinitionName:
    Description: The name of the SubscriptionDefinition
    Value: !GetAtt SubscriptionDefinition.Name

  SubscriptionDefinitionId:
    Description: The ID of the SubscriptionDefinition
    Value: !GetAtt SubscriptionDefinition.Id

  SubscriptionDefinitionArn:
    Description: The ARN of the SubscriptionDefinition
    Value: !GetAtt SubscriptionDefinition.Arn

  SubscriptionDefinitionLatestVersionId:
    Description: The ID of the latest version of SubscriptionDefinition
    Value: !GetAtt SubscriptionDefinition.LatestVersion

  SubscriptionDefinitionLatestVersionArn:
    Description: The ARN of the latest version of SubscriptionDefinition
    Value: !GetAtt SubscriptionDefinition.LatestVersionArn

  # GrassFormation FunctionDefinition resource outputs

  FunctionDefinitionName:
    Description: The name of the FunctionDefinition
    Value: !GetAtt FunctionDefinition.Name

  FunctionDefinitionId:
    Description: The ID of the FunctionDefinition
    Value: !GetAtt FunctionDefinition.Id

  FunctionDefinitionArn:
    Description: The ARN of the FunctionDefinition
    Value: !GetAtt FunctionDefinition.Arn

  FunctionDefinitionLatestVersionId:
    Description: The ID of the latest version of FunctionDefinition
    Value: !GetAtt FunctionDefinition.LatestVersion

  FunctionDefinitionLatestVersionArn:
    Description: The ARN of the latest version of FunctionDefinition
    Value: !GetAtt FunctionDefinition.LatestVersionArn

  # GrassFormation GreengrassGroup resource outputs

  GreengrassGroupName:
    Description: The name of the GreengrassGroup
    Value: !GetAtt GreengrassGroup.Name

  GreengrassGroupId:
    Description: The ID of the GreengrassGroup
    Value: !GetAtt GreengrassGroup.Id

  GreengrassGroupArn:
    Description: The ARN of the GreengrassGroup
    Value: !GetAtt GreengrassGroup.Arn

  GreengrassGroupLatestVersionId:
    Description: The ID of the latest version of the GreengrassGroup
    Value: !GetAtt GreengrassGroup.LatestVersion

  GreengrassGroupLatestVersionArn:
    Description: The ARN of the latest version of the GreengrassGroup
    Value: !GetAtt GreengrassGroup.LatestVersionArn

  # Greengrass Lambda resource outputs

  GreengrassLambdaFullArn:
    Description: The fully qualified ARN of the lambda function running on Greengrass core
    Value: !Ref GreengrassLambdaFunction.Alias

  GreengrassGroupRoleArn:
    Description: The ARN of the IAM Role of the Greengrass Group
    Value: !GetAtt GreengrassGroupRole.Arn
